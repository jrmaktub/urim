@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/

@layer base {
  :root {
    /* Urim Minimal Design System - Apple-inspired */
    --background: 0 0% 2%; /* deep black */
    --foreground: 0 0% 98%; /* soft white */

    --card: 0 0% 6%; /* dark card background */
    --card-foreground: 0 0% 98%;

    --popover: 0 0% 6%;
    --popover-foreground: 0 0% 98%;

    --primary: 270 85% 68%; /* vibrant purple */
    --primary-foreground: 0 0% 100%;
    --primary-glow: 270 90% 75%; /* lighter purple for glows */

    --secondary: 0 0% 14%; /* neutral dark gray */
    --secondary-foreground: 0 0% 98%;

    --muted: 0 0% 10%;
    --muted-foreground: 0 0% 60%;

    --accent: 270 85% 68%;
    --accent-foreground: 0 0% 100%;

    --destructive: 0 72% 51%;
    --destructive-foreground: 0 0% 98%;

    --border: 0 0% 15%;
    --input: 0 0% 8%;
    --ring: 270 85% 68%;

    --radius: 1rem; /* smooth rounded corners */

    /* Gradients */
    --gradient-primary: linear-gradient(135deg, hsl(270 85% 68%), hsl(270 90% 75%));
    --gradient-glow: radial-gradient(circle at center, hsl(270 85% 68% / 0.15), transparent 70%);
    
    /* Shadows */
    --shadow-sm: 0 1px 2px 0 hsl(0 0% 0% / 0.1);
    --shadow-md: 0 4px 12px -2px hsl(0 0% 0% / 0.3);
    --shadow-lg: 0 20px 40px -10px hsl(0 0% 0% / 0.4);
    --shadow-purple: 0 8px 32px hsl(270 85% 68% / 0.25);
    --shadow-purple-lg: 0 12px 48px hsl(270 85% 68% / 0.35);
    
    /* Transitions */
    --transition-smooth: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    --transition-spring: all 0.4s cubic-bezier(0.34, 1.56, 0.64, 1);
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground;
    font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'SF Pro Display', sans-serif;
    font-weight: 400;
    letter-spacing: -0.011em;
    line-height: 1.6;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }

  /* Card Effects */
  .glass-card {
    @apply bg-card/80 rounded-2xl border border-border/40;
    backdrop-filter: blur(20px);
    transition: var(--transition-smooth);
  }

  .glass-card:hover {
    border-color: hsl(var(--primary) / 0.4);
    box-shadow: var(--shadow-purple);
    transform: translateY(-2px);
  }

  /* Premium card with glow */
  .card-glow {
    @apply bg-card rounded-2xl border border-primary/30;
    box-shadow: var(--shadow-purple);
    transition: var(--transition-smooth);
  }

  .card-glow:hover {
    border-color: hsl(var(--primary) / 0.6);
    box-shadow: var(--shadow-purple-lg);
  }

  /* Animations */
  @keyframes fade-in {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes fade-up {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes glow-pulse {
    0%, 100% {
      opacity: 0.8;
      filter: brightness(1);
    }
    50% {
      opacity: 1;
      filter: brightness(1.2);
    }
  }

  @keyframes shimmer {
    0% {
      background-position: -200% center;
    }
    100% {
      background-position: 200% center;
    }
  }

  @keyframes float {
    0%, 100% {
      transform: translateY(0px);
    }
    50% {
      transform: translateY(-10px);
    }
  }

  @keyframes particle-float {
    0%, 100% {
      transform: translateY(0) translateX(0) scale(0);
      opacity: 0;
    }
    20% {
      opacity: 1;
      transform: translateY(-20px) translateX(10px) scale(1);
    }
    80% {
      opacity: 0.6;
      transform: translateY(-80px) translateX(-10px) scale(0.5);
    }
  }

  @keyframes quantum-ripple {
    0% {
      transform: scale(0.8);
      opacity: 1;
    }
    100% {
      transform: scale(2.5);
      opacity: 0;
    }
  }

  @keyframes quantum-burst {
    0% {
      transform: scale(1) rotate(0deg);
      opacity: 0;
    }
    50% {
      opacity: 1;
    }
    100% {
      transform: scale(1.5) rotate(180deg);
      opacity: 0;
    }
  }

  @keyframes shimmer-flow {
    0% {
      background-position: -200% center;
    }
    100% {
      background-position: 200% center;
    }
  }

  @keyframes slide-in-from-bottom {
    0% {
      opacity: 0;
      transform: translateY(40px);
    }
    100% {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .animate-fade-in {
    animation: fade-in 0.6s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .animate-fade-up {
    animation: fade-up 0.8s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .animate-glow {
    animation: glow-pulse 3s ease-in-out infinite;
  }

  .animate-float {
    animation: float 6s ease-in-out infinite;
  }

  .animate-quantum-ripple {
    animation: quantum-ripple 2s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .animate-quantum-burst {
    animation: quantum-burst 1.5s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .animate-shimmer {
    animation: shimmer-flow 3s linear infinite;
  }

  .animate-slide-in {
    animation: slide-in-from-bottom 0.8s cubic-bezier(0.4, 0, 0.2, 1);
  }

  /* Hover glow effect for cards */
  .hover-glow {
    position: relative;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .hover-glow::before {
    content: '';
    position: absolute;
    inset: -2px;
    background: linear-gradient(135deg, hsl(var(--primary)), hsl(var(--primary-glow)));
    border-radius: inherit;
    opacity: 0;
    transition: opacity 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    z-index: -1;
  }

  .hover-glow:hover::before {
    opacity: 0.6;
  }

  /* Shimmer text effect */
  .shimmer-text {
    background: linear-gradient(
      90deg,
      hsl(var(--foreground)) 0%,
      hsl(var(--primary)) 50%,
      hsl(var(--foreground)) 100%
    );
    background-size: 200% auto;
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    animation: shimmer-flow 3s linear infinite;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground;
  }
}
